/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  Drupal.behaviors.LbUXMessage = {
    attach: function attach() {
      var initWrapper = function initWrapper() {
        var wrapper = document.querySelector(".js-messages__wrapper");
        if (!wrapper) {
          wrapper = document.querySelector("[data-drupal-messages]");
          wrapper.classList.add("js-messages__wrapper");
        }

        if (drupalSettings.lbUX) {
          if (!drupalSettings.lbUX.hasOwnProperty("messages")) {
            drupalSettings.lbUX.messages = new Drupal.Message(wrapper);
            wrapper.addEventListener("click", function (event) {
              if (event.target.classList.contains("drupal-message-close")) {
                var id = event.target.dataset.drupalMessageId;
                drupalSettings.lbUX.messages.remove(id);
              }
            });
          }
        }

        return wrapper;
      };

      var displayMessages = function displayMessages(messageList) {
        var messagesWrapper = initWrapper();
        if (!messagesWrapper || !(drupalSettings.lbUX || {}).messages) {
          return;
        }
        var messageQueue = messageList.reduce(function (queue, list) {
          Object.keys(list).forEach(function (type) {
            list[type].filter(function (message) {
              return !drupalSettings.lbUX.messageDisplay.find(function (display) {
                return message === display.text;
              });
            }).forEach(function (message) {
              queue.push({ message: message, type: type });
            });
          });
          return queue;
        }, []);

        messageQueue.forEach(function (item, index) {
          var message = item.message,
              type = item.type;

          var id = drupalSettings.lbUX.messages.add(message, {
            priority: type,
            type: type
          });
          var messageClose = document.createElement("button");
          messageClose.innerHTML = "<span class=\"visually-hidden\">" + Drupal.t("Close") + "</span>";
          messageClose.setAttribute("data-drupal-message-id", id);
          messageClose.classList.add("drupal-message-close");

          var messageWrapper = document.querySelector("[data-drupal-message-id=" + id + "]");
          messageWrapper.classList.add("messages__closeable");
          messageWrapper.style.setProperty("--animation-index", index);
          messageWrapper.appendChild(messageClose);

          drupalSettings.lbUX.messageDisplay.push({
            text: message,
            type: type,
            id: id
          });
        });
      };

      if (drupalSettings.hasOwnProperty("lbUX")) {
        if (!drupalSettings.lbUX.hasOwnProperty("messageDisplay")) {
          drupalSettings.lbUX.messageDisplay = [];
        }
      }

      var _ref = drupalSettings.lbUX || {},
          _ref$messageList = _ref.messageList,
          messageList = _ref$messageList === undefined ? [] : _ref$messageList;

      displayMessages(messageList);
    }
  };
})(jQuery, Drupal, drupalSettings);